"""–ò–≥—Ä–æ–≤—ã–µ —è—á–µ–π–∫–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–π –¥–æ—Å–∫–µ.

–í—Å—è –¥–æ—Å–∫–∞ –ø–æ–¥–µ–ª–µ–Ω–∞ –Ω–µ —è—á–µ–π–∫–∏, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.
–ü—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –Ω–∞ —è—á–µ–π–∫—É, —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
"""

from enum import IntEnum
from typing import TYPE_CHECKING

from maupoly.enums import GameEvents, TurnState

if TYPE_CHECKING:
    from maupoly.game import MonoGame
    from maupoly.player import Player

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –∏–≥—Ä—ã
# ===============================


_FIELD_TYPES = ("üí∏", "‚ú®", "‚úàÔ∏è", "üì±", "‚ùì", "üíé", "üåÄ", "üëÆ", "üé∞")


class FieldType(IntEnum):
    """–¢–∏–ø—ã —è—á–µ–µ–∫.

    - Buy: –ü–æ–ª–µ –ø–æ–∫—É–ø–∫–∏/–ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–Ω–µ—Ç.
    - Rent: –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å, –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–æ—Ö–æ–¥ —Å –ø–æ–ª—è.
    - Airport: –ü–æ–¥–ø–∏—Ç Rent, –ü—Ä–∏–Ω–æ—Å–∏—Ç –¥–æ—Ö–æ–¥ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö.
    - Communicate: –ü–æ–¥—Ç–∏–ø Rent. –ü—Ä–∏–Ω–æ—Å–∏—Ç –¥–æ—Ö–æ–¥ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∫—É–±–∏–∫–∞.
    - Chance: –ö–∞—Ä—Ç–æ—á–∫–∏ —à–∞–Ω—Å–∞ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º.
    - Prize: –ö–∞—Ä—Ç–æ—á–∫–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–∞–∑–Ω—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º–∏.
    - Teleport: –ü–µ—Ä–µ–º–µ—â–∞—é—Ç –∏–≥—Ä–æ–∫–∞ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª–µ.
    - Prison: –ü–æ–ª–µ —Ç—é—Ä—å–º—ã.
    - Casino: –ü–æ–ª–µ –∫–∞–∑–∏–Ω–æ.
    """

    BUY = 0
    RENT = 1
    AIRPORT = 2
    COMMUNICATE = 3
    CHANCE = 4
    PRIZE = 5
    TELEPORT = 6
    PRISON = 7
    CASINO = 8

    @property
    def symbol(self) -> str:
        """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å–º–∞–π–ª–∏–∫–∞."""
        return _FIELD_TYPES[self.value]


_FIELD_COLORS = ("üü§", "‚ö™", "üü£", "üü†", "üî¥", "üü°", "üü¢", "üîµ")


class FieldColor(IntEnum):
    """–¶–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª–µ–π —Ä–µ–Ω—Ç—ã."""

    BROWN = 0
    SKY = 1
    PURPLE = 2
    ORANGE = 3
    RED = 4
    YELLOW = 5
    GREEN = 5
    BLUE = 6

    @property
    def symbol(self) -> str:
        """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å–º–∞–π–ª–∏–∫–∞."""
        return _FIELD_COLORS[self.value]


# –ò–≥—Ä–æ–≤—ã–µ –ø–æ–ª—è
# ============


class BaseField:
    """–ë–∞–∑–æ–≤–æ–µ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ.

    –û–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±—â–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö –ø–æ–ª–µ–π.
    """

    def __init__(self, field_type: FieldType, name: str) -> None:
        self.type = field_type
        self.name = name

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –Ω–∞ –ø–æ–ª–µ –∏–≥—Ä–æ–∫–æ–º.

        –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
        - –ü—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ/—É–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        - –û–ø–ª–∞—Ç–∞ —Ä–µ–Ω—Ç—ã.
        - –ü–æ–∫—É–ø–∫–∞ –ø–æ–ª—è.
        - –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —à–∞–Ω—Å–∞ –∏–ª–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–∞–∑–Ω—ã.
        """
        raise NotImplementedError

    # –ú–∞–≥–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã
    # =================

    def __call__(self, game: "MonoGame", player: "Player") -> None:
        """–ë–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–∞—è –∑–∞–ø–∏—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–ª—è.

        ```py
        start = BuyField("–°—Ç–∞—Ä—Ç", 1000, True)

        start.callback(game, player)

        # –∏–ª–∏
        start(game, player)
        ```
        """
        self.callback(game, player)


class BuyField(BaseField):
    """–ü–æ–ª–µ –ø–æ–∫—É–ø–∫–∏.

    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∞ –ø–æ–ª–µ, –æ–Ω –¥–æ–ª–∂–µ–Ω –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∏–ª–∏
    –Ω–∞–æ–±–æ—Ä–æ—Ç –ø–æ–ª—É—á–∏—Ç—å –º–æ–Ω–µ—Ç—ã –∑–∞ –∫–∞–∫—É—é-—Ç–æ —É—Å–ª—É–≥—É.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª–µ–π:
    - –°—Ç–∞—Ä—Ç.
    - –ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π –Ω–∞–ª–æ–≥.
    - –ù–∞–ª–æ–≥ –Ω–∞ —Ä–æ—Å–∫–æ—à—å.
    """

    def __init__(self, name: str, cost: int, is_reward: bool = False) -> None:
        super().__init__(field_type=FieldType.BUY, name=name)
        self.cost = cost
        self.is_reward = is_reward

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–û–ø–ª–∞—Ç–∞ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–æ–Ω–µ—Ç."""
        if self.is_reward:
            player.give(self.cost)
        else:
            player.pay(self.cost)
        player.push_event(
            GameEvents.PLAYER_BUY, f"{self.cost} {self.is_reward}"
        )


class BaseRentField(BaseField):
    """–ë–∞–∑–æ–≤–æ–µ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –∫—É–ø–∏—Ç –∏–≥—Ä–æ–∫."""

    def __init__(
        self,
        name: str,
        buy_cost: int,
        base_rent: int,
        field_type: FieldType = FieldType.RENT,
    ) -> None:
        super().__init__(field_type=field_type, name=name)
        self.buy_cost = buy_cost
        self.owner: Player | None = None
        self.base_rent = base_rent

        # –ó–∞–ª–æ–≥ –ø–æ–ª—è
        self.deposit_cost = buy_cost // 2
        self.redemption_cost = self.deposit_cost
        self.is_deposit = False

    def count_rent(self) -> int:
        """–°—á–∏—Ç–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∏–≥—Ä–æ–∫—É —Ä–µ–Ω—Ç—ã."""
        return self.base_rent if not self.is_deposit else 0

    def buy(self, player: "Player") -> None:
        """–ü–æ–∫—É–ø–∞–µ—Ç –ø–æ–ª–µ."""
        player.pay(self.buy_cost)
        self.owner = player

    def deposit(self, player: "Player") -> None:
        """–ó–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç –ø–æ–ª–µ."""
        player.give(self.deposit_cost)
        self.is_deposit = True

    def redemption(self, player: "Player") -> None:
        """–í—ã–∫—É–ø–∞–µ—Ç –∑–∞–ª–æ–∂–µ–Ω–Ω–æ–µ –ø–æ–ª–µ."""
        player.pay(self.redemption_cost)
        self.is_deposit = False

    def pay_rent(self, player: "Player") -> None:
        """–ü–ª–∞—Ç–∏—Ç —Ä–µ–Ω—Ç—É –≤–ª–∞–¥–µ–ª—å—Ü—É –ø–æ–ª—è."""
        if self.owner is None:
            raise ValueError("Field has not owner")

        rent = self.count_rent()
        player.pay(rent)
        self.owner.give(rent)

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–ü–æ–∫—É–ø–∫–∞ –ø–æ–ª—è –∏–ª–∏ –æ–ø–ª–∞—Ç–∞ —Ä–µ–Ω—Ç—ã."""
        if self.owner is None:
            game.set_state(TurnState.BYU)
        else:
            self.pay_rent(player)


class RentField(BaseRentField):
    """–ü–æ–ª–µ —Ä–µ–Ω—Ç—ã.

    –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫—É–ø–∞–µ—Ç —ç—Ç–æ –ø–æ–ª–µ.
    –ï—Å–ª–∏ –æ–Ω –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ç –ø–æ–∫—É–ø–∫–∏, –æ–Ω–æ –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω.
    –ö–æ–≥–¥–∞ –¥—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫ –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∞ —ç—Ç–æ –ø–æ–ª–µ, –æ–Ω –ø–ª–∞—Ç–∏—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É —Ä–µ–Ω—Ç—É.
    –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π –æ–¥–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞, –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç—å
    –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å.
    """

    def __init__(
        self,
        name: str,
        color: FieldColor,
        buy_cost: int,
        base_rent: int,
        level_cost: int,
    ) -> None:
        super().__init__(
            name=name,
            buy_cost=buy_cost,
            base_rent=base_rent,
            field_type=FieldType.RENT,
        )

        # –û—Å–Ω–æ–≤–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞
        self.color = color
        self.level = 0
        self.level_cost = level_cost


class AirportField(BaseRentField):
    """–°–∞–º–æ–ª—ë—Ç—ã.

    –ü–æ—Ö–æ–∂–µ –Ω–∞ –æ–±—ã—á–Ω—ã–µ –ø–æ–ª—è —Ä–µ–Ω—Ç—ã.
    –†–µ–Ω—Ç–∞ –Ω–∞ –ø–æ–ª–µ–∑ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É –≤–ª–∞–¥–µ–ª—å—Ü–∞.
    –ù–µ –∏–º–µ–µ—Ç —Ü–≤–µ—Ç–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.
    """

    def __init__(self, name: str, buy_cost: int, base_rent: int) -> None:
        super().__init__(
            name=name,
            buy_cost=buy_cost,
            base_rent=base_rent,
            field_type=FieldType.AIRPORT,
        )


class CommunicateField(BaseRentField):
    """–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è.

    –ü–æ—Ö–æ–∂–µ –Ω–∞ –æ–±—ã—á–Ω—ã–µ –ø–æ–ª—è —Ä–µ–Ω—Ç—ã.
    –†–µ–Ω—Ç–∞ –Ω–∞ –ø–æ–ª–µ–∑ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∫—É–±–∏–∫–∞ –∏–≥—Ä–æ–∫–∞, —á—Ç–æ –ø–æ–ø–∞–ª –Ω–∞ –ø–æ–ª–µ.
    –¢–∞–∫–∂–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–Ω—Ç—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è—á–µ–µ–∫ —É –≤–ª–∞–¥–µ–ª—å—Ü–∞.
    –ù–µ –∏–º–µ–µ—Ç —Ü–≤–µ—Ç–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.
    """

    def __init__(self, name: str, buy_cost: int, base_rent: int) -> None:
        super().__init__(
            name=name,
            buy_cost=buy_cost,
            base_rent=base_rent,
            field_type=FieldType.AIRPORT,
        )


class ChanceField(BaseField):
    """–ü–æ–ª–µ —à–∞–Ω—Å–∞.

    –ü—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –Ω–∞ —ç—Ç–æ –ø–æ–ª–µ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
    –ö –ø—Ä–∏–º–µ—Ä—É –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ –ø–æ–ª—é, –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–Ω–µ—Ç –∏ –ø—Ä–æ—á–µ–µ.
    """

    def __init__(self) -> None:
        super().__init__(field_type=FieldType.CHANCE, name="–®–∞–Ω—Å")

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–°–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —à–∞–Ω—Å."""
        game.player.push_event(GameEvents.PLAYER_CHANCE, "No implemented")


class PrizeField(BaseField):
    """–ü–æ–ª–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–∞–∑–Ω—ã.

    –ü—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –Ω–∞ —ç—Ç–æ –ø–æ–ª–µ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.
    –ö –ø—Ä–∏–º–µ—Ä—É –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ –ø–æ–ª—é, –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–Ω–µ—Ç –∏ –ø—Ä–æ—á–µ–µ.
    """

    def __init__(self) -> None:
        super().__init__(field_type=FieldType.PRIZE, name="–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∞–∑–Ω–∞")

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–°–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —à–∞–Ω—Å."""
        game.player.push_event(GameEvents.PLAYER_CHANCE, "No implemented")


class TeleportField(BaseField):
    """–ü–æ–ª–µ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞.

    –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø–æ–ª–µ.
    """

    def __init__(self, name: str, to_field: int) -> None:
        super().__init__(field_type=FieldType.TELEPORT, name=name)
        self.to_field = to_field

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–°–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∞–∑–Ω–∞."""
        game.player.move_to(self.to_field)


class PrisonField(BaseField):
    """–ü–æ–ª–µ —Ç—é—Ä—å–º—ã.

    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–∏–º–æ, —Å –Ω–∏–º –Ω–∏—á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–ª –≤ —Ç—é—Ä—å–º—É, —Ç–æ –æ–Ω –º–æ–∂–µ—Ç –ª–∏–±–æ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è
    –≤—ã–∫–∏–Ω—É—Ç—å –¥—É–±–ª—å, –ª–∏–±–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤—ã—Ö–æ–¥ –∏–∑ —Ç—é—Ä—å–º—ã.
    """

    def __init__(self) -> None:
        super().__init__(field_type=FieldType.PRISON, name="–¢—é—Ä—å–º–∞")

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–∏–≥—Ä–æ–∫ –ø–æ–ø–∞–ª –≤ —Ç—é—Ä—å–º—É."""
        game.player.push_event(GameEvents.PLAYER_PRISON)


class CasinoField(BaseField):
    """–ü–æ–ª–µ –∫–∞–∑–∏–Ω–æ.

    –£—á–∞—Å—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –ª–∏–±–æ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è, –ª–∏–±–æ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞–≤–∫—É.
    –ï—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É, —Ç–æ –º–æ–∂–Ω–æ –ª–∏–±–æ –≤—ã–∏–≥—Ä–∞—Ç—å. –ª–∏–±–æ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å.
    """

    def __init__(self) -> None:
        super().__init__(field_type=FieldType.CASINO, name="–ö–∞–∑–∏–Ω–æ")

    def callback(self, game: "MonoGame", player: "Player") -> None:
        """–∏–≥—Ä–æ–∫–∞ –ø–æ–ø–∞–ª –Ω–∞ –ø–æ–ª–µ –∫–∞–∑–∏–Ω–æ."""
        game.player.push_event(GameEvents.PLAYER_CASINO)


# –ò–≥—Ä–æ–≤—ã–µ –ø–æ–ª—è
# ============

# TODO: –ú–æ–∂–µ—Ç –º—ã –ª—É—á—à–µ —ç—Ç–æ –≤ –∫–ª–∞—Å—Å –∫–∞–∫–æ–π –∑–∞—Ç–æ–ª–∫–∞–µ–º?
CLASSIC_BOARD = [
    BuyField("–°—Ç–∞—Ä—Ç", 1000, True),
    RentField(
        "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        FieldColor.BROWN,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    PrizeField(),
    RentField(
        "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫",
        FieldColor.BROWN,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    BuyField("–ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π –Ω–∞–ª–æ–≥", 2000),
    AirportField(
        "–®–µ—Ä–µ–º–µ—Ç—å–µ–≤–æ",
        buy_cost=200,
        base_rent=60,
    ),
    RentField(
        "–°–∞–º–∞—Ä–∞",
        FieldColor.SKY,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    ChanceField(),
    RentField(
        "–ß–µ–±–æ–∫—Å–∞—Ä—ã",
        FieldColor.SKY,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    RentField(
        "–ü–µ–Ω–∑–∞",
        FieldColor.SKY,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    PrisonField(),
    RentField(
        "–ß–µ–ª—è–±–∏–Ω—Å–∫",
        FieldColor.PURPLE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    CommunicateField(
        "–ú–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å",
        buy_cost=200,
        base_rent=60,
    ),
    RentField(
        "–ë–∞—Ä–Ω–∞—É–ª",
        FieldColor.PURPLE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    RentField(
        "–ü—Å–∫–æ–≤",
        FieldColor.PURPLE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    AirportField(
        "–¢–æ–ª–º–∞—á—ë–≤–æ",
        buy_cost=200,
        base_rent=60,
    ),
    RentField(
        "–ë–∞—Ç–∞–π—Å–∫",
        FieldColor.ORANGE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    PrizeField(),
    RentField(
        "–í–æ—Ä–æ–Ω–µ–∂",
        FieldColor.ORANGE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    RentField(
        "–°—ã–∫—Ç—ã–≤–∫–∞—Ä",
        FieldColor.ORANGE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    CasinoField(),
    RentField(
        "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
        FieldColor.RED,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    ChanceField(),
    RentField(
        "–†—è–∑–∞–Ω—å",
        FieldColor.RED,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    RentField(
        "–ú–æ—Å–∫–≤–∞",
        FieldColor.RED,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    AirportField(
        "–ü—É–ª–∫–æ–≤–æ",
        buy_cost=200,
        base_rent=60,
    ),
    RentField(
        "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫",
        FieldColor.YELLOW,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    RentField(
        "–û–±–Ω–∏–Ω—Å–∫",
        FieldColor.YELLOW,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    CommunicateField(
        "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç",
        buy_cost=200,
        base_rent=60,
    ),
    RentField(
        "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
        FieldColor.YELLOW,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    TeleportField("–í —Ç—é—Ä—å–º—É", to_field=10),
    RentField(
        "–°–µ–≤–µ—Ä–æ–¥–≤–∏–Ω—Å–∫",
        FieldColor.GREEN,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    RentField(
        "–ö—É—Ä–≥–∞–Ω",
        FieldColor.GREEN,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    PrizeField(),
    RentField(
        "–°—É—Ä–≥—É—Ç",
        FieldColor.GREEN,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    AirportField(
        "–ö–æ–ª—å—Ü–æ–≤–æ",
        buy_cost=200,
        base_rent=60,
    ),
    ChanceField(),
    RentField(
        "–ü–µ—Ä–º—å",
        FieldColor.BLUE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
    BuyField("–ù–∞–ª–æ–≥ –Ω–∞ —Ä–æ—Å–∫–æ—à—å", 1000),
    RentField(
        "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
        FieldColor.BLUE,
        buy_cost=200,
        base_rent=60,
        level_cost=100,
    ),
]
