"""–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –æ—Ç –¥–≤–∏–∂–∫–∞."""

from maupoly.enums import GameEvents
from polybot import keyboards, messages
from polybot.config import sm
from polybot.events.journal import EventContext, EventRouter

er = EventRouter()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–µ—Å—Å–∏–π
# =================


@er.handler(event=GameEvents.SESSION_START)
async def start_session(ctx: EventContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–±–±–∏, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è –≤ —á–∞—Ç–µ."""
    lobby_message = (
        f"{messages.get_room_status(ctx.event.game)}\n\n"
        f"üî• {ctx.event.player.name}, –ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É!"
    )
    await ctx.send_lobby(
        message=lobby_message,
        reply_markup=keyboards.get_room_markup(ctx.event.game),
    )


@er.handler(event=GameEvents.SESSION_END)
async def end_session(ctx: EventContext) -> None:
    """–û—á–∏—â–∞–µ—Ç —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫–∞–Ω–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–π."""
    ctx.journal.remove_channel(ctx.event.room_id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –∏–≥—Ä—ã
# ======================


@er.handler(event=GameEvents.GAME_START)
async def start_game(ctx: EventContext) -> None:
    """–û–ø–æ–≤–µ—â–∞–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É."""
    ctx.gen_board()
    ctx.add(messages.get_new_game_message(ctx.event.game))
    await ctx.send()


@er.handler(event=GameEvents.GAME_END)
async def end_game(ctx: EventContext) -> None:
    """–û–ø–æ–≤–µ—â–∞–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É."""
    ctx.add(messages.end_game_message(ctx.event.game))
    ctx.set_markup(None)
    sm.remove(ctx.event.room_id)
    await ctx.send()


@er.handler(event=GameEvents.GAME_JOIN)
async def join_player(ctx: EventContext) -> None:
    """–û–ø–æ–≤–µ—â–∞–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É."""
    if ctx.event.game.started:
        ctx.add(f"üç∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É, {ctx.event.player.name}!")
        await ctx.send()
    else:
        lobby_message = (
            f"{messages.get_room_status(ctx.event.game)}\n\n"
            f"üëã {ctx.event.player.name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–Ω–∞—Ç—É!"
        )
        await ctx.send_lobby(
            message=lobby_message,
            reply_markup=keyboards.get_room_markup(ctx.event.game),
        )


@er.handler(event=GameEvents.GAME_LEAVE)
async def leave_player(ctx: EventContext) -> None:
    """–û–ø–æ–≤–µ—â–∞–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É."""
    # –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã–≤–∞—Ç—å –≤—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã –¥–æ –µ—ë –Ω–∞—á–∞–ª–∞
    if ctx.event.data == "win":
        ctx.add(f"üëë {ctx.event.player.name} –ø–æ–±–µ–¥–∏–ª(–∞)!\n")
    else:
        ctx.add(f"üëã {ctx.event.player.name} –ø–æ–∫–∏–¥–∞–µ—Ç –∏–≥—Ä—É!\n")

    if not ctx.event.game.started:
        ctx.set_markup(None)

    await ctx.send()


@er.handler(event=GameEvents.GAME_TURN)
async def next_turn(ctx: EventContext) -> None:
    """–û–ø–æ–≤–µ—â–∞–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É."""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –±—É—Ñ–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
    ctx.add("üç∫ –ó–∞–≤–µ—Ä—à–∞—é —Ö–æ–¥")
    await ctx.send()

    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await ctx.clear()
    ctx.gen_board()
    ctx.add(
        f"\nüç∞ <b>—Ö–æ–¥</b>: {ctx.event.game.player.name} "
        f"(üí∏ {ctx.event.player.balance})"
    )
    await ctx.send()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
# ===========================


@er.handler(event=GameEvents.GAME_STATE)
async def new_game_state(ctx: EventContext) -> None:
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è."""
    if ctx.event.data == "buy":
        ctx.add(f"üëÄ {ctx.event.player.name} –∑–∞–¥—É–º—ã–≤–∞–µ—Ç—Å—è –æ –ø–æ–∫—É–ø–∫–µ.")
        ctx.set_markup(keyboards.get_buy_field_markup(ctx.event.player))
    else:
        ctx.add(f"‚öôÔ∏è –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {ctx.event.data}")
        ctx.set_markup(keyboards.NEXT_MARKUP)
    await ctx.send()


# –°–æ–±—ã—Ç–∏—è –∏–≥—Ä–æ–∫–∞
# ==============


@er.handler(event=GameEvents.PLAYER_DICE)
async def roll_dice(ctx: EventContext) -> None:
    """–û–ø–æ–≤–µ—â–∞–µ—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –∏–≥—Ä—É."""
    ctx.add(f"üé≤ –ù–∞ –∫—É–±–∏–∫–µ {ctx.event.data}")


@er.handler(event=GameEvents.PLAYER_MOVE)
async def move_player(ctx: EventContext) -> None:
    """–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –ø–æ –ø–æ–ª—é."""
    field_status = messages.field_status(ctx.event.player.field)
    ctx.add(f"üß≠ –í—ã –ø–æ–ø–∞–ª–∏ –Ω–∞ –ø–æ–ª–µ {field_status}!")


@er.handler(event=GameEvents.PLAYER_BUY)
async def pay_field(ctx: EventContext) -> None:
    """–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–ª –Ω–∞ –ø–æ–ª–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å."""
    cost, is_reward = ctx.event.data.split()
    if is_reward == "true":
        ctx.add(f"üí∏ {ctx.event.player.name} –ü–æ–ª—É—á–∞–µ—Ç {cost}")
    else:
        ctx.add(f"üí∏ {ctx.event.player.name} –¥–æ–ª–∂–µ–Ω –∑–∞–ø–ª–∞—Ç–∏—Ç—å {cost}")
    ctx.set_markup(keyboards.NEXT_MARKUP)
    await ctx.send()


@er.handler(event=GameEvents.PLAYER_BUY_FIELD)
async def byu_field(ctx: EventContext) -> None:
    """–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –∫—É–ø–∏–ª –ø–æ–ª–µ."""
    ctx.add(f"üí∏ {ctx.event.player.name} –ø–æ–∫—É–ø–∞–µ—Ç –ø–æ–ª–µ.")


@er.handler(event=GameEvents.PLAYER_CHANCE)
async def player_chance(ctx: EventContext) -> None:
    """–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø–æ–ø–∞–ª –Ω–∞ –ø–æ–ª–µ —à–∞–Ω—Å –∏–ª–∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∞–∑–Ω–∞."""
    ctx.add(f"‚ú® {ctx.event.data}!")


@er.handler(event=GameEvents.PLAYER_PRISON)
async def player_prison(ctx: EventContext) -> None:
    """–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø–æ–ø–∞–ª –≤ —Ç—é—Ä—å–º—É."""
    ctx.add("‚ö° –≤—ã –±—ã–ª–∏ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω—ã!")


@er.handler(event=GameEvents.PLAYER_CASINO)
async def player_casino(ctx: EventContext) -> None:
    """–ö–æ–≥–¥–∞ –∏–≥—Ä–æ–∫ –ø–æ–ø–∞–ª –≤ –∫–∞–∑–∏–Ω–æ."""
    ctx.add("üé∞ –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–∞–∑–∏–Ω–æ!")
    ctx.set_markup(keyboards.NEXT_MARKUP)
    await ctx.send()
