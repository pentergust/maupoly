"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ö–æ–¥–∞."""

from random import randint

from aiogram import F, Router
from aiogram.types import CallbackQuery

from maupoly.game import MonoGame
from maupoly.player import Player
from polybot import filters
from polybot.events.journal import MessageChannel

router = Router(name="Turn")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
# ===========


@router.callback_query(F.data == "dice", filters.ActivePlayer())
async def roll_dice(
    query: CallbackQuery,
    game: MonoGame,
    player: Player,
    channel: MessageChannel,
) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞."""
    if game is None or player is None or game.player != player:
        await query.answer("üçâ –ê –≤—ã —Ç–æ—á–Ω–æ —Å–µ–π—á–∞—Å —Ö–æ–¥–∏—Ç–µ?")

    dice_1 = randint(1, 6)
    dice_2 = randint(1, 6)
    dice_res = dice_1 + dice_2
    game.process_turn(dice_res)

    # TODO: –¢—ã –ø–æ–µ–¥–µ—à—å –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ
    channel.add(f"üíé –í—ã –ø–æ–ø–∞–ª–∏ –Ω–∞ –ø–æ–ª–µ {game.fields[game.player.index].name}!")

    # TODO: –ö–æ—Å—Ç—ã–ª—å –∫–∞—Ä–æ—á–µ —Ç—É—Ç
    game.next_turn()
