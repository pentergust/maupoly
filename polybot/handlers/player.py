"""–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–≥—Ä–æ–≤—ã–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏.

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ.
"""

from aiogram import F, Router
from aiogram.filters import (
    Command,
)
from aiogram.types import CallbackQuery, Message
from loguru import logger

from maupoly.exceptions import (
    AlreadyJoinedError,
)
from maupoly.player import BaseUser, Player
from maupoly.session import SessionManager
from polybot import filters

router = Router(name="Player")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
# ===========


@router.message(Command("join"), filters.ActiveGame())
async def join_player(message: Message, sm: SessionManager) -> None:
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∏–≥—Ä–µ."""
    if message.from_user is None:
        raise ValueError("User can`t be none")

    sm.join(
        str(message.chat.id),
        BaseUser(message.from_user.id, message.from_user.mention_html()),
    )

    try:
        await message.delete()
    except Exception as e:
        logger.warning("Unable to delete message: {}", e)
        await message.answer(
            "üëÄ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–¥–∞–π—Ç–µ –º–Ω–µ –ø—Ä–∞–≤–∞ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ."
        )


@router.message(Command("leave"), filters.ActivePlayer())
async def leave_player(
    message: Message, sm: SessionManager, player: Player
) -> None:
    """–í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∏–≥—Ä—ã."""
    sm.leave(player)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
# ======================


@router.callback_query(F.data == "join", filters.ActiveGame())
async def join_callback(query: CallbackQuery, sm: SessionManager) -> None:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∏–≥—Ä–æ–∫–∞ –≤ —Ç–µ–∫—É—â—É—é –∫–æ–º–Ω–∞—Ç—É."""
    if not isinstance(query.message, Message):
        raise ValueError("Query message should be Message instance")

    try:
        sm.join(
            str(query.message.chat.id),
            BaseUser(query.from_user.id, query.from_user.mention_html()),
        )
    except AlreadyJoinedError:
        await query.answer("üëã –í—ã —É–∂–µ —Å –Ω–∞–º–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ")
